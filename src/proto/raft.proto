syntax = "proto2";

package raft;

/*enum RaftState {*/
    /*StateLeader     =   0;*/
    /*StateFollower   =   1;*/
    /*StateCandidate  =   2;*/
/*}*/

enum EntryType {
    EntryNormal     =   0;
    EntryConfChange =   1;
}

message Entry {
    optional EntryType type = 1; 
    required uint64 term    = 2;
    required uint64 index   = 3;
    optional bytes data     = 4;
} 

message VoteRequest {
    required uint64 term         = 1;
    required uint64 candidateId  = 2;
    required uint64 lastLogIndex = 3;
    required uint64 lastLogTerm  = 4;
}

message VoteResponse {
    required uint64 term      = 1;
    required bool voteGranted = 2;
}


message AppendEntriesRequest {
    required uint64 term         = 1;
    required uint64 leaderId     = 2;
    required uint64 prevLogIndex = 3;
    required uint64 prevLogTerm  = 4;
    repeated Entry entries       = 5;
    required uint64 leaderCommit = 6;
}

message AppendEntriesResponse {
    required uint64 term        = 1;
    required bool success       = 2;
}


message InstallSnapShotRequest {
    required uint64 term             = 1;
    required uint64 leaderId         = 2;
    required uint64 lastIncludeIndex = 3;
    required uint64 lastIncludeTerm  = 4;
    optional bytes data              = 5;
}

message InstallSnapShotResponse {
    required uint64 term            = 1;
}

service RaftService {
    rpc RequesetVote(VoteRequest) returns(VoteResponse);
    rpc AppendEntries(AppendEntriesRequest) returns(AppendEntriesResponse);
    rpc InstallSnapShot(InstallSnapShotRequest) returns(InstallSnapShotResponse);
}
